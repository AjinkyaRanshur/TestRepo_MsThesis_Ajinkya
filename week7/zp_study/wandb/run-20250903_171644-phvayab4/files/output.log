âœ“ WandB initialized in Online mode
Files already downloaded and verified
Files already downloaded and verified
The Iteration0:
================================
Epoch:0 and AverageLoss:2.3039714631522097 and Reconstruction Loss:0.02006063051521778
Epoch:1 and AverageLoss:2.3038427518761675 and Reconstruction Loss:0.021391939371824265
Epoch:2 and AverageLoss:2.3037250938317966 and Reconstruction Loss:0.02101069875061512
Epoch:3 and AverageLoss:2.30361601458791 and Reconstruction Loss:0.02120179496705532
Epoch:4 and AverageLoss:2.30352165449001 and Reconstruction Loss:0.021952616050839424
Epoch:5 and AverageLoss:2.3034291486910847 and Reconstruction Loss:0.019083920866250992
Epoch:6 and AverageLoss:2.3033418807837056 and Reconstruction Loss:0.0225826408714056
Epoch:7 and AverageLoss:2.303278169973427 and Reconstruction Loss:0.01818687841296196
Epoch:8 and AverageLoss:2.303211632287106 and Reconstruction Loss:0.021107984706759453
Epoch:9 and AverageLoss:2.303150220295352 and Reconstruction Loss:0.018872786313295364
Model Saved Sucessfully
The Iteration1:
================================
Epoch:0 and AverageLoss:2.3030983572420864 and Reconstruction Loss:0.022708185017108917
Epoch:1 and AverageLoss:2.303063167635437 and Reconstruction Loss:0.02193988300859928
Traceback (most recent call last):
  File "/home/ajinkya/projects/TestRepo_MsThesis_Ajinkya/week7/zp_study/main.py", line 229, in <module>
    main()
  File "/home/ajinkya/projects/TestRepo_MsThesis_Ajinkya/week7/zp_study/main.py", line 167, in main
    train_bool = fine_tuning_using_classification(net,save_dir, trainloader, testloader,config)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ajinkya/projects/TestRepo_MsThesis_Ajinkya/week7/zp_study/main.py", line 129, in fine_tuning_using_classification
    train_bool=recon_pc_training(net,trainloader,testloader,"fine_tuning",config)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ajinkya/projects/TestRepo_MsThesis_Ajinkya/week7/zp_study/recon_pc_train.py", line 148, in recon_pc_training
    output,ft_AB_pc_temp,ft_BC_pc_temp,ft_CD_pc_temp,ft_DE_pc_temp,ft_EF_pc_temp,ft_FG_pc_temp,loss_of_layers=net.predictive_coding_pass(images,ft_AB_pc_temp,ft_BC_pc_temp,ft_CD_pc_temp,ft_DE_pc_temp,ft_EF_pc_temp,ft_FG_pc_temp,config.betaset,config.gammaset,config.alphaset,images.size(0))
                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ajinkya/projects/TestRepo_MsThesis_Ajinkya/week7/zp_study/network.py", line 112, in predictive_coding_pass
    errorE = nn.functional.mse_loss(self.deconv4_fb(self.upsample(ft_DE)),ft_CD)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ajinkya/miniconda3/envs/cuda_pyt/lib/python3.12/site-packages/torch/nn/functional.py", line 3792, in mse_loss
    return torch._C._nn.mse_loss(
           ^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Exception ignored in atexit callback: <function _start_and_connect_service.<locals>.teardown_atexit at 0x7f8dc20d7600>
Traceback (most recent call last):
  File "/home/ajinkya/miniconda3/envs/cuda_pyt/lib/python3.12/site-packages/wandb/sdk/lib/service/service_connection.py", line 54, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/home/ajinkya/miniconda3/envs/cuda_pyt/lib/python3.12/site-packages/wandb/sdk/lib/service/service_connection.py", line 182, in teardown
    self._router.join()
  File "/home/ajinkya/miniconda3/envs/cuda_pyt/lib/python3.12/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/home/ajinkya/miniconda3/envs/cuda_pyt/lib/python3.12/threading.py", line 1149, in join
    self._wait_for_tstate_lock()
  File "/home/ajinkya/miniconda3/envs/cuda_pyt/lib/python3.12/threading.py", line 1169, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt:
