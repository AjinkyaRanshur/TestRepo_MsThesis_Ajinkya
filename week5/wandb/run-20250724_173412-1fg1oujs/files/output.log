âœ“ WandB initialized in Online mode
Files already downloaded and verified
Files already downloaded and verified
Epoch:0 and AverageLoss:0.24790470648909468
Traceback (most recent call last):
  File "/home/ajinkyar/projects/TestRepo_MsThesis_Ajinkya/week5/main.py", line 278, in <module>
    main()
  File "/home/ajinkyar/projects/TestRepo_MsThesis_Ajinkya/week5/main.py", line 217, in main
    train_bool = training_using_reconstruction_and_predicitve_coding(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ajinkyar/projects/TestRepo_MsThesis_Ajinkya/week5/main.py", line 137, in training_using_reconstruction_and_predicitve_coding
    recon_pc_training(
  File "/home/ajinkyar/projects/TestRepo_MsThesis_Ajinkya/week5/recon_pc_train.py", line 57, in recon_pc_training
    test_loss=recon_pc_loss(net,testloader,batch_size,beta,gamma,alpha,device,criterion,timesteps)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ajinkyar/projects/TestRepo_MsThesis_Ajinkya/week5/eval_and_plotting.py", line 86, in recon_pc_loss
    ft_AB_pc_temp,ft_BC_pc_temp,ft_CD_pc_temp,ft_DE_pc_temp,loss_of_layers=net.recon_predictive_coding_pass(images,ft_AB_pc_temp,ft_BC_pc_temp,ft_CD_pc_temp,ft_DE_pc_temp,beta,gamma,alpha,images.size(0))
                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ajinkyar/projects/TestRepo_MsThesis_Ajinkya/week5/network.py", line 153, in recon_predictive_coding_pass
    errorC=nn.functional.mse_loss(self.deconv2_fb(self.upsample(ft_BC)),ft_AB)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ajinkyar/miniconda3/envs/cuda_pyt/lib/python3.12/site-packages/torch/nn/functional.py", line 3792, in mse_loss
    return torch._C._nn.mse_loss(
           ^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 1 has a total capacity of 10.91 GiB of which 13.38 MiB is free. Process 688122 has 864.00 MiB memory in use. Process 920142 has 844.00 MiB memory in use. Including non-PyTorch memory, this process has 9.22 GiB memory in use. Of the allocated memory 8.46 GiB is allocated by PyTorch, and 12.08 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
